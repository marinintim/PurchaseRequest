// Generated by CoffeeScript 1.4.0
(function() {

  define("Models/PurchaseRequest", ["Models/Address", "Models/CreditCard"], function(Address, CreditCard) {
    var PurchaseRequest;
    return PurchaseRequest = Backbone.Model.extend({
      attributes: {
        credit_card: CreditCard,
        address: Address,
        billing_address: Address
      },
      url: function() {
        return "http://localhost:3000" + "/orders";
      },
      toJSON: function() {
        var _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
        return {
          credit_card_id: (_ref = this.get('credit_card')) != null ? _ref.get('id') : void 0,
          billing_address_id: (_ref1 = this.get('billingAddress')) != null ? _ref1.get('id') : void 0,
          address_id: (_ref2 = this.get('address')) != null ? _ref2.get('id') : void 0,
          credit_card: (_ref3 = this.get('credit_card')) != null ? _ref3.toJSON() : void 0,
          address: (_ref4 = this.get('address')) != null ? _ref4.toJSON() : void 0,
          billing_address: (_ref5 = this.get('billing_address')) != null ? _ref5.toJSON() : void 0
        };
      },
      validate: function() {
        var billingInvalid, cardInvalid, shippingInvalid, _ref, _ref1, _ref2;
        cardInvalid = (_ref = this.get('credit_card')) != null ? _ref.validate() : void 0;
        shippingInvalid = (_ref1 = this.get('address')) != null ? _ref1.validate() : void 0;
        billingInvalid = (_ref2 = this.get('billing_address')) != null ? _ref2.validate() : void 0;
        if (cardInvalid) {
          return cardInvalid;
        }
        if (shippingInvalid) {
          return shippingInvalid;
        }
        if (billingInvalid) {
          return billingInvalid;
        }
      }
      /*Simple debug for Backbone.sync
      		sync: (method, model) ->
      			console.log('sync in action')
      			console.log(JSON.stringify(model))
      */

    });
  });

}).call(this);
