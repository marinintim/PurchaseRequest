// Generated by CoffeeScript 1.4.0
(function() {

  define('Tests/spec/modelAddress', ['Models/Address'], function(Address) {
    'use strict';
    return describe("Models :: Nested :: Address", function() {
      beforeEach(function() {
        this.a = new Address;
        return this.myAddr = {
          address: 'Tverskaya st.',
          address2: '57, flat 14',
          locality: 'Tomsk',
          country: 'Russia',
          region: 'TOM'
        };
      });
      it('should accept and validate properly data as correct', function() {
        this.a.set(this.myAddr);
        return expect(this.a.isValid()).toBeTruthy();
      });
      it('should return error on completely empty address object', function() {
        return expect(this.a.validate()).toBeDefined();
      });
      it('should return error on empty address', function() {
        this.myAddr.address = '';
        this.a.set(this.myAddr);
        return expect(this.a.validate()).toContain("Address is empty");
      });
      return it('should return error on empty locality', function() {
        this.myAddr.locality = '';
        this.a.set(this.myAddr);
        return expect(this.a.validate()).toContain("Locality is empty");
      });
    });
  });

}).call(this);
