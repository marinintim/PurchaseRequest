// Generated by CoffeeScript 1.4.0
(function() {

  define("Views/Address", ["Models/Address", "Collections/Address", "Collections/Country"], function(Address, AddressCollection, CountryCollection) {
    var AddressView;
    return AddressView = Backbone.View.extend({
      events: {
        "change .pr-address-select": "updateToSelected",
        "change .pr-address-country": "updateRegions",
        "change .pr-address-region": "updateModel",
        "keyup": "updateModel"
      },
      updateToSelected: function() {
        var newModel, selected;
        selected = this.$el.find(".pr-address-select :selected").val();
        if (selected === "same") {
          newModel = this.parentModel.get('address');
        } else {
          newModel = this.collection.get(selected);
        }
        if (typeof (newModel != null ? newModel.toJSON : void 0) === 'function') {
          this.model.set(newModel.toJSON());
        }
        this.updateParent();
        return this.render();
      },
      updateParent: function() {
        this.parentModel.set("" + (this.options.samePossible === true ? "billing_" : "") + "address", this.model);
        return this.parentModel.trigger("change");
      },
      updateModel: function() {
        this.model.set({
          id: "",
          address: this.$el.find('.pr-address-address').val(),
          address2: this.$el.find('.pr-address-address2').val(),
          locality: this.$el.find('.pr-address-locality').val(),
          country: this.$el.find('.pr-address-country').val(),
          region: this.$el.find('.pr-address-region').val()
        });
        return this.updateParent();
      },
      updateRegions: function() {
        var newCountry, regions;
        newCountry = this.$el.find('.pr-address-country :selected').val();
        if (newCountry == null) {
          newCountry = this.model.get('country');
        }
        if (newCountry !== void 0) {
          this.model.set('country', newCountry);
        }
        regions = this.countryCollection.findWhere({
          code: newCountry
        }).regions.toJSON();
        this.$el.find('.pr-address-region').html(this.templateOptions({
          options: regions
        }));
        this.updateModel();
        return regions;
      },
      initialize: function(options) {
        var _base, _ref,
          _this = this;
        if (options == null) {
          options = {};
        }
        this.options = options;
        if ((_ref = (_base = this.options).samePossible) == null) {
          _base.samePossible = false;
        }
        this.model = new Address;
        this.parentModel = options.parentModel;
        this.collection = new AddressCollection;
        this.countryCollection = new CountryCollection;
        this.collection.fetch({
          success: function() {
            if (_this.options.samePossible) {
              _this.model = void 0;
            } else {
              _this.model = _this.collection.first();
            }
            _this.updateToSelected();
          }
        });
        this.countryCollection.fetch({
          success: function() {
            return _this.updateRegions;
          }
        });
      },
      template: Handlebars.compile($("#pr-address").html()),
      templateForm: Handlebars.compile($("#pr-address-form").html()),
      templateOptions: Handlebars.compile($("#pr-address-options").html()),
      render: function() {
        var selected;
        selected = this.$el.find(".pr-address-select :selected").val();
        this.$el.html(this.template({
          addresses: this.collection.toJSON(),
          samePossible: this.options.samePossible
        }));
        if (selected === "new") {
          this.$el.append(this.templateForm({
            countries: this.countryCollection.toJSON()
          }));
          this.updateRegions();
        }
        this.$el.find(".pr-address-select [value=" + selected + "]").attr("selected", "selected");
      }
    });
  });

}).call(this);
