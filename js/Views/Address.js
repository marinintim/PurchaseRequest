// Generated by CoffeeScript 1.4.0
(function() {

  define("Views/Address", ["Views/Enchanced"], function(EnchancedView) {
    var AddressView;
    return AddressView = EnchancedView.extend({
      events: {
        "change .pr-address-select": "updateToSelected",
        "change .pr-address-country": "updateRegions",
        "change .pr-address-region": "updateModel",
        "keyup input": "updateModel"
      },
      updateRegions: function(event) {
        var countryModel, newCountry, success, _ref,
          _this = this;
        if ((newCountry = (event != null ? (_ref = event.target) != null ? _ref.value : void 0 : void 0) || this.model.get('country') || this.$('.pr-address-country option:first').val())) {
          this.model.set('country', newCountry);
        }
        success = function() {
          _this.$('.pr-address-region').html(_this.templateOptions({
            options: countryModel.regions.toJSON()
          }));
          return _this.updateModel();
        };
        if (countryModel = this.countryCollection.findWhere({
          code: newCountry
        })) {
          countryModel.regions.fetch({
            success: success
          });
        }
      },
      getReady: function(options) {
        var _this = this;
        this.model = options.parentModel.get("address");
        return this.listenToOnce(this.collection, "sync", function() {
          if (_this.collection.size() > 0) {
            _this.model.set(_this.collection.first().toJSON());
            _this.updateToSelected({
              target: {
                value: _this.model.id
              }
            });
          }
        });
      },
      initialize: function(options) {
        var prop, _i, _len, _ref;
        if (options == null) {
          options = {};
        }
        this.form = {};
        _ref = ['address', 'address2', 'locality', 'country', 'region'];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          prop = _ref[_i];
          this.form[prop] = '.pr-address-' + prop;
        }
        this.collection = app.collections.addresses;
        this.countryCollection = app.collections.countries;
        this.getReady(options);
      },
      template: Handlebars.compile($("#pr-address").html()),
      templateForm: Handlebars.compile($("#pr-address-form").html()),
      templateOptions: Handlebars.compile($("#pr-address-options").html()),
      render: function(selected) {
        if (selected == null) {
          selected = this.$('.pr-address-select').val();
        }
        this.$el.html(this.template({
          addresses: this.collection.toJSON()
        }));
        if (selected === "new") {
          this.$el.append(this.templateForm({
            countries: this.countryCollection.toJSON()
          }));
          this.updateRegions();
        }
        this.$('.pr-address-select').val(selected);
      }
    });
  });

}).call(this);
