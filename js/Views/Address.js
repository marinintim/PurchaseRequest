// Generated by CoffeeScript 1.4.0
(function() {

  define("Views/Address", ["Models/Address", "Collections/Address", "Collections/Country"], function(Address, AddressCollection, CountryCollection) {
    var AddressView;
    return AddressView = Backbone.View.extend({
      events: {
        "change .pr-address-select": "updateToSelected",
        "change .pr-address-country": "updateRegions",
        "change .pr-address-region": "updateModel",
        "keyup": "updateModel"
      },
      updateToSelected: function() {
        var newModel, selected,
          _this = this;
        selected = this.$el.find(".pr-address-select :selected").val();
        if (selected === "same") {
          newModel = this.parentModel.get('address');
          this.model.set(this.parentModel.get('address').toJSON());
          this.listenTo(this.parentModel.get('address'), "change", function() {
            _this.model.set(_this.parentModel.get('address').toJSON());
            return _this.parentModel.trigger("change");
          });
        } else {
          if (selected === "new") {
            this.stopListening(this.parentModel.get('address'));
            this.updateModel();
          } else {
            newModel = this.collection.get(selected);
            if (newModel != null) {
              this.model.set(newModel.toJSON());
            }
          }
        }
        this.parentModel.trigger("change");
        return this.render();
      },
      updateModel: function() {
        var param, _i, _len, _ref;
        _ref = ['address', 'address2', 'locality', 'country', 'region'];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          param = _ref[_i];
          this.model.set(param, this.$el.find(".pr-address-" + param).val() || "");
        }
        this.model.unset("id");
        return this.parentModel.trigger("change");
      },
      updateRegions: function() {
        var countryModel, newCountry,
          _this = this;
        newCountry = this.$el.find('.pr-address-country :selected').val();
        if (newCountry == null) {
          newCountry = this.model.get('country');
        }
        if (newCountry !== void 0) {
          this.model.set('country', newCountry);
        }
        countryModel = this.countryCollection.findWhere({
          code: newCountry
        });
        if ((countryModel != null ? countryModel.regions : void 0) != null) {
          countryModel.regions.fetch({
            success: function() {
              _this.$el.find('.pr-address-region').html(_this.templateOptions({
                options: countryModel.regions.toJSON()
              }));
              return _this.updateModel();
            }
          });
        }
      },
      initialize: function(options) {
        var _base, _ref,
          _this = this;
        if (options == null) {
          options = {};
        }
        this.options = options;
        if ((_ref = (_base = this.options).samePossible) == null) {
          _base.samePossible = false;
        }
        this.parentModel = options.parentModel;
        this.model = this.parentModel.get("" + (this.options.samePossible ? "billing_" : "") + "address");
        this.collection = new AddressCollection;
        this.countryCollection = new CountryCollection;
        this.collection.fetch({
          success: function() {
            if (_this.options.samePossible) {
              setTimeout(function() {
                _this.model.set(_this.parentModel.get('address').toJSON());
                _this.$el.find(".pr-address-select [value=same]").attr("selected", "selected");
                return _this.updateToSelected();
              }, 0);
              _this.listenTo(_this.parentModel.get('address'), "change", function() {
                _this.model.set(_this.parentModel.get('address').toJSON());
                return _this.parentModel.trigger("change");
              });
            } else {
              if (_this.collection.size() > 0) {
                _this.model.set(_this.collection.first().toJSON());
                setTimeout(function() {
                  return _this.$el.find(".pr-address-select [value=" + (_this.model.get('id')) + "]").attr("selected", "selected");
                }, 0);
                _this.parentModel.trigger("change");
              }
            }
            _this.updateToSelected();
          }
        });
        this.countryCollection.fetch({
          success: _.bind(this.updateRegions, this)
        });
      },
      template: Handlebars.compile($("#pr-address").html()),
      templateForm: Handlebars.compile($("#pr-address-form").html()),
      templateOptions: Handlebars.compile($("#pr-address-options").html()),
      render: function() {
        var selected;
        selected = this.$el.find(".pr-address-select :selected").val();
        this.$el.html(this.template({
          addresses: this.collection.toJSON(),
          samePossible: this.options.samePossible
        }));
        if (selected === "new") {
          this.$el.append(this.templateForm({
            countries: this.countryCollection.toJSON()
          }));
          this.updateRegions();
        }
        this.$el.find(".pr-address-select [value=" + selected + "]").attr("selected", "selected");
      }
    });
  });

}).call(this);
