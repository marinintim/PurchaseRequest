// Generated by CoffeeScript 1.7.1
(function() {
  define("Views/Address", ["Models/Address", "Collections/Address", "Collections/Country"], function(Address, AddressCollection, CountryCollection) {
    var AddressView;
    return AddressView = Backbone.View.extend({
      events: {
        "change .pr-address-select": "render",
        "change .pr-address-country": "updateRegions"
      },
      initialize: function() {
        this.model = new Address;
        this.collection = new AddressCollection;
        this.countryCollection = new CountryCollection;
        this.countryCollection.fetch({
          success: (function(_this) {
            return function() {};
          })(this)
        });
        this.collection.fetch({
          success: _.bind(this.render, this)
        });
      },
      template: Handlebars.compile($("#pr-address").html()),
      templateForm: Handlebars.compile($("#pr-address-form").html()),
      templateOptions: Handlebars.compile($("#pr-address-options").html()),
      updateRegions: function() {
        var regions, searchCode, _ref;
        searchCode = this.$el.find('.pr-address-country').val();
        regions = (_ref = this.countryCollection.findWhere({
          code: searchCode
        })) != null ? _ref.regions.models : void 0;
        this.$el.children('.pr-address-regions').html('<option>S00KA</OPTION>');
      },
      render: function() {
        var selected;
        selected = this.$el.find(".pr-address-select :selected").val();
        this.model = this.collection.get(selected);
        console.log("rendering " + this.$el.className);
        this.$el.html(this.template({
          addresses: this.collection.toJSON()
        }));
        if (selected === "new") {
          this.$el.append(this.templateForm({
            countries: this.countryCollection.toJSON()
          }));
          this.updateRegions();
        }
        this.$el.find(".pr-address-select [value=" + selected + "]").attr("selected", "selected");
      }
    });
  });

}).call(this);
